<?xml version="1.0" standalone="yes"?>
<project name="froth" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">
  <property name="steamworks.sdk" value="steamworks_sdk_161.zip"/>

  <property name="src.dir"      value="src/main/java"/>
  <property name="deploy.dir"   value="dist"/>
  <property name="classes.dir"  value="${deploy.dir}/classes"/>

  <property name="maven-ant.vers" value="2.1.3"/>
  <property name="maven-ant.dir" value="${user.home}/.m2/ant-support"/>
  <property name="maven-ant.jar" value="${maven-ant.dir}/maven-ant-tasks-${maven-ant.vers}.jar"/>
  <property name="maven-ant.url"
            value="https://repo1.maven.org/maven2/org/apache/maven/maven-ant-tasks/${maven-ant.vers}/maven-ant-tasks-${maven-ant.vers}.jar"/>
  <condition property="maven-ant.exists"><available file="${maven-ant.jar}"/></condition>
  <target name="-download-maven-ant" unless="maven-ant.exists">
    <mkdir dir="${maven-ant.dir}"/>
    <get src="${maven-ant.url}" dest="${maven-ant.jar}" usetimestamp="true"/>
  </target>

  <target name="-init-maven-ant" depends="-download-maven-ant">
    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant" classpath="${maven-ant.jar}"/>
    <artifact:pom id="pom" file="pom.xml"/>
    <artifact:dependencies pathId="compile.classpath" pomRefId="pom" useScope="compile"/>
  </target>

  <target name="-prepare" depends="-init-maven-ant">
    <mkdir dir="${deploy.dir}"/>
    <path id="built.classpath">
      <path refid="compile.classpath"/>
      <pathelement location="${classes.dir}"/>
    </path>
  </target>

  <target name="-unpack-sdk" depends="-prepare">
    <unzip src="lib/${steamworks.sdk}" dest="${deploy.dir}" overwrite="false">
      <patternset includes="sdk/public/steam/**, sdk/redistributable_bin/**, sdk/tools/**"/>
    </unzip>
  </target>

  <target name="clean" description="Cleans out build results">
    <delete dir="${deploy.dir}/classes"/>
    <delete dir="${deploy.dir}/docs"/>
    <delete failonerror="false"><fileset dir="${deploy.dir}" includes="*.jar"/></delete>
  </target>

  <target name="distclean" description="Scorched earth clean">
    <delete dir="${deploy.dir}"/>
  </target>

  <target name="compile" depends="-prepare" description="Builds the Java code.">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}" deprecation="on" nativeHeaderDir="src/cpp"
           source="10" target="10">
      <classpath refid="compile.classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <target name="nativecompile" depends="-unpack-sdk" description="Builds the native code.">
    <mkdir dir="${deploy.dir}/lib"/>
    <mkdir dir="${deploy.dir}/lib/MacOS"/>
    <apply os="Linux" executable="g++" parallel="true" failonerror="true">
      <arg line="-m64 -fPIC -o lib/x86_64-Linux/libfroth.so -shared -Wl,--no-undefined"/>
      <arg value="-I${java.home}/../include"/>
      <arg value="-I${java.home}/../include/linux"/>
      <arg value="-I${deploy.dir}/sdk/public"/>
      <arg value="-L${deploy.dir}/sdk/redistributable_bin/linux64"/>
      <fileset dir="src/cpp" includes="*.cpp"/>
      <srcfile/>
      <arg value="-lsteam_api"/>
    </apply>
    <apply osfamily="windows" executable="SetEnv.Cmd" parallel="true" failonerror="true">
      <arg line="/x64 &amp;&amp; cl -Felib/x64_64-Windows/froth64.dll -LD"/>
      <arg value="-I${java.home}/../include"/>
      <arg value="-I${java.home}/../include/win64"/>
      <arg value="-I${deploy.dir}/sdk/public"/>
      <arg value="${deploy.dir}/sdk/redistributable_bin/win64/steam_api64.lib"/>
      <fileset dir="src/cpp" includes="*.cpp"/>
    </apply>
    <apply osfamily="mac" executable="clang++" parallel="true" failonerror="true">
      <arg line="-o ${deploy.dir}/lib/MacOS/libfroth.dylib -bundle -lsteam_api"/>
      <arg line="-std=c++17 -arch arm64 -arch x86_64"/>
      <arg line="-mmacosx-version-min=10.13"/>
      <arg value="-I${java.home}/include"/>
      <arg value="-I${java.home}/include/darwin"/>
      <arg value="-I${deploy.dir}/sdk/public"/>
      <arg value="-L${deploy.dir}/sdk/redistributable_bin/osx"/>
      <fileset dir="src/cpp" includes="*.cpp"/>
    </apply>
    <apply osfamily="mac" executable="lipo" parallel="true" failonerror="true">
      <srcfile/>
      <arg line="-create -output lib/Universal-MacOS/libfroth.dylib"/>
      <fileset dir="${deploy.dir}/lib/MacOS" includes="*.dylib"/>
    </apply>
  </target>

  <target name="javadoc" depends="-prepare" description="Builds the Java documentation">
    <mkdir dir="${deploy.dir}/docs"/>
    <javadoc sourcepath="${src.dir}" packagenames="com.threerings.*"
             destdir="${deploy.dir}/docs" stylesheetfile="docs/stylesheet.css"
             additionalparam="-breakiterator">
      <classpath refid="built.classpath"/>
      <link href="http://java.sun.com/j2se/1.5/docs/api"/>
    </javadoc>
  </target>

  <!-- a target for rebuilding everything -->
  <target name="all" depends="clean,compile,javadoc,dist"/>

  <target name="dist" depends="compile" description="Builds jar files.">
    <jar destfile="${deploy.dir}/${ant.project.name}.jar">
      <fileset dir="${classes.dir}" includes="com/**"/>
    </jar>
  </target>

  <property name="maven.deploy.repo" value="file://${basedir}/repo"/>
  <target name="maven-deploy" depends="dist"
          description="Deploys our build artifacts to a Maven repository.">
    <copy todir="${deploy.dir}/natives">
      <fileset dir="lib" excludes="*.zip"/>
    </copy>
    <copy todir="${deploy.dir}/natives/x86_64-Windows">
      <fileset dir="${deploy.dir}/sdk/redistributable_bin/win64" includes="*.dll"/>
    </copy>
    <copy todir="${deploy.dir}/natives/x86_64-Linux">
      <fileset dir="${deploy.dir}/sdk/redistributable_bin/linux64" includes="*.so"/>
    </copy>
    <copy todir="${deploy.dir}/natives/Universal-MacOS">
      <fileset dir="${deploy.dir}/sdk/redistributable_bin/osx" includes="*.dylib"/>
    </copy>
    <jar basedir="${deploy.dir}/natives" destfile="${deploy.dir}/${ant.project.name}-natives.jar"/>
    <jar basedir="${deploy.dir}/sdk/tools" destfile="${deploy.dir}/${ant.project.name}-tools.jar"/>
    <artifact:deploy file="${deploy.dir}/${ant.project.name}.jar" uniqueVersion="false">
      <remoteRepository url="${maven.deploy.repo}"/>
      <pom refid="pom"/>
      <attach file="${deploy.dir}/${ant.project.name}-natives.jar" classifier="natives"/>
      <attach file="${deploy.dir}/${ant.project.name}-tools.jar" classifier="tools"/>
    </artifact:deploy>
  </target>
</project>
